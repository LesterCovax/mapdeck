// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_arc
Rcpp::List rcpp_arc(Rcpp::DataFrame data, Rcpp::List params);
RcppExport SEXP _mapdeck_rcpp_arc(SEXP dataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_arc(data, params));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_grid
Rcpp::List rcpp_grid(Rcpp::DataFrame data, Rcpp::List params);
RcppExport SEXP _mapdeck_rcpp_grid(SEXP dataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_grid(data, params));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hexagon
Rcpp::List rcpp_hexagon(Rcpp::DataFrame data, Rcpp::List params);
RcppExport SEXP _mapdeck_rcpp_hexagon(SEXP dataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_hexagon(data, params));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_line
Rcpp::List rcpp_line(Rcpp::DataFrame data, Rcpp::List params);
RcppExport SEXP _mapdeck_rcpp_line(SEXP dataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_line(data, params));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_path
Rcpp::List rcpp_path(Rcpp::DataFrame data, Rcpp::List params);
RcppExport SEXP _mapdeck_rcpp_path(SEXP dataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_path(data, params));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_pointcloud
Rcpp::List rcpp_pointcloud(Rcpp::DataFrame data, Rcpp::List params);
RcppExport SEXP _mapdeck_rcpp_pointcloud(SEXP dataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_pointcloud(data, params));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_polygon
Rcpp::List rcpp_polygon(Rcpp::DataFrame data, Rcpp::List params);
RcppExport SEXP _mapdeck_rcpp_polygon(SEXP dataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_polygon(data, params));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_scatterplot
Rcpp::List rcpp_scatterplot(Rcpp::DataFrame data, Rcpp::List params);
RcppExport SEXP _mapdeck_rcpp_scatterplot(SEXP dataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_scatterplot(data, params));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_screengrid
Rcpp::List rcpp_screengrid(Rcpp::DataFrame data, Rcpp::List params);
RcppExport SEXP _mapdeck_rcpp_screengrid(SEXP dataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_screengrid(data, params));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sfc_to_geojson
Rcpp::StringVector rcpp_sfc_to_geojson(Rcpp::List& sfc);
RcppExport SEXP _mapdeck_rcpp_sfc_to_geojson(SEXP sfcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type sfc(sfcSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sfc_to_geojson(sfc));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sf_to_geojson_atomise
Rcpp::StringVector rcpp_sf_to_geojson_atomise(Rcpp::DataFrame& sf);
RcppExport SEXP _mapdeck_rcpp_sf_to_geojson_atomise(SEXP sfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type sf(sfSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sf_to_geojson_atomise(sf));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sf_to_geojson
Rcpp::StringVector rcpp_sf_to_geojson(Rcpp::DataFrame& sf);
RcppExport SEXP _mapdeck_rcpp_sf_to_geojson(SEXP sfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type sf(sfSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sf_to_geojson(sf));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_text
Rcpp::List rcpp_text(Rcpp::DataFrame data, Rcpp::List params);
RcppExport SEXP _mapdeck_rcpp_text(SEXP dataSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_text(data, params));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mapdeck_rcpp_arc", (DL_FUNC) &_mapdeck_rcpp_arc, 2},
    {"_mapdeck_rcpp_grid", (DL_FUNC) &_mapdeck_rcpp_grid, 2},
    {"_mapdeck_rcpp_hexagon", (DL_FUNC) &_mapdeck_rcpp_hexagon, 2},
    {"_mapdeck_rcpp_line", (DL_FUNC) &_mapdeck_rcpp_line, 2},
    {"_mapdeck_rcpp_path", (DL_FUNC) &_mapdeck_rcpp_path, 2},
    {"_mapdeck_rcpp_pointcloud", (DL_FUNC) &_mapdeck_rcpp_pointcloud, 2},
    {"_mapdeck_rcpp_polygon", (DL_FUNC) &_mapdeck_rcpp_polygon, 2},
    {"_mapdeck_rcpp_scatterplot", (DL_FUNC) &_mapdeck_rcpp_scatterplot, 2},
    {"_mapdeck_rcpp_screengrid", (DL_FUNC) &_mapdeck_rcpp_screengrid, 2},
    {"_mapdeck_rcpp_sfc_to_geojson", (DL_FUNC) &_mapdeck_rcpp_sfc_to_geojson, 1},
    {"_mapdeck_rcpp_sf_to_geojson_atomise", (DL_FUNC) &_mapdeck_rcpp_sf_to_geojson_atomise, 1},
    {"_mapdeck_rcpp_sf_to_geojson", (DL_FUNC) &_mapdeck_rcpp_sf_to_geojson, 1},
    {"_mapdeck_rcpp_text", (DL_FUNC) &_mapdeck_rcpp_text, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_mapdeck(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
