# Generated by roxygen2: do not edit by hand

S3method(determinePalette,"function")
S3method(determinePalette,list)
S3method(findEncodedColumn,default)
S3method(findEncodedColumn,sfencoded)
S3method(flattenLegend,list)
S3method(flattenLegend,logical)
S3method(formatLegendValue,POSIXct)
S3method(formatLegendValue,default)
S3method(formatLegendValue,numeric)
S3method(generatePalette,default)
S3method(generatePalette,factor)
S3method(generatePalette,numeric)
S3method(getLegendType,default)
S3method(getLegendType,numeric)
S3method(normaliseMultiSfData,sf)
S3method(normaliseSfData,default)
S3method(normaliseSfData,sf)
S3method(normaliseSfData,sfencoded)
S3method(normalisesGeojsonData,character)
S3method(normalisesGeojsonData,default)
S3method(normalisesGeojsonData,sf)
S3method(print,mapdeck_api)
S3method(resolve_data,data.frame)
S3method(resolve_data,sf)
S3method(resolve_data,sfencoded)
S3method(resolve_data,sfencodedLite)
S3method(resolve_elevation_data,data.frame)
S3method(resolve_elevation_data,sf)
S3method(resolve_elevation_data,sfencoded)
S3method(resolve_elevation_data,sfencodedLite)
S3method(resolve_od_data,data.frame)
S3method(resolve_od_data,sf)
S3method(resolve_od_data,sfencoded)
S3method(resolve_od_data,sfencodedLite)
export("%>%")
export(add_arc)
export(add_arc_old)
export(add_geojson)
export(add_grid)
export(add_grid_old)
export(add_hexagon)
export(add_hexagon_old)
export(add_line)
export(add_line_old)
export(add_path)
export(add_path_old)
export(add_pointcloud)
export(add_pointcloud_old)
export(add_polygon)
export(add_polygon_old)
export(add_scatterplot)
export(add_scatterplot_old)
export(add_screengrid)
export(add_screengrid_old)
export(add_text)
export(add_text_old)
export(clear_arc)
export(clear_geojson)
export(clear_grid)
export(clear_hexagon)
export(clear_legend)
export(clear_line)
export(clear_path)
export(clear_pointcloud)
export(clear_polygon)
export(clear_scatterplot)
export(clear_screengrid)
export(clear_text)
export(clear_tokens)
export(invoke_method)
export(mapdeck)
export(mapdeckOutput)
export(mapdeck_dispatch)
export(mapdeck_style)
export(mapdeck_tokens)
export(mapdeck_update)
export(mapdeck_view)
export(renderMapdeck)
export(set_token)
import(htmlwidgets)
importFrom(Rcpp,sourceCpp)
importFrom(magrittr,"%>%")
useDynLib(mapdeck, .registration = TRUE)
